************** While Loops

//*********** HLL
int i = 0;
int sum = 0;
while (i < 2){
	sum = sum + i;
	i = i + 1;
}

//*********** PAL
; R0: sum
; R1: loop counter
; R2: test value
MOV 0, R1
MOV 0, R0
MOV 2, R2

test:
BGT R2, R1, itr
BR fin

itr:
ADD R0, R1, R0
INC R1
BR test

fin:
END


//*********** HLL
int i = 1;
int prod = 1;
while (i <= 2){
	prod = prod * i;
	i = i + 1;
}

//*********** PAL
; R0: prod
; R1: loop counter
; R2: test value
MOV 1, R1
MOV 1, R0
MOV 2, R2

loop:
BGT R1, R2, fin
MUL R0, R1, R0
INC R1
BR loop

fin:
END

*************** Do While Loop

//*********** HLL
int i = 0;
int sum = 0;
do {
	sum = sum + i;
	i = i + 1;
} while (i < 2)

//*********** PAL
; R0: sum
; R1: loop counter
; R2: test value
MOV 0, R1
MOV 0, R0
MOV 2, R2

loop:
ADD R0, R1, R0
INC R1
BGT R2, R1, loop

END

//*********** HLL
int i = 1;
int prod = 1;
do {
	prod = prod * i;
	i = i + 1;
} while (i <= 2)

//*********** PAL
; R0: prod
; R1: loop counter
; R2: test value
MOV 1, R1
MOV 1, R0
MOV 2, R2

loop:
MUL R0, R1, R0
INC R1
BGT R2, R1, loop
BEQ R2, R1, loop

END


**************** If Statement

//*********** HLL
int i = 2;
int num = 3;
if (i < 4){
	num = num * num;
}

//*********** PAL
; R0: num
; R1: loop counter
; R2: test value
MOV 2, R1
MOV 3, R0
MOV 4, R2

BGT R2, R1, doif
BR fin

doif:
MUL R0, R0, R0

fin:
END

//*********** HLL
int i = 2;
int num = 3;
if (i <= 4){
	num = num * num;
}

//*********** PAL
; R0: num
; R1: loop counter
; R2: test value
MOV 2, R1
MOV 3, R0
MOV 4, R2

BGT R1, R2, skip
MUL R0, R0, R0

skip:
END


**************** If Else Statement

//*********** HLL
int i = 2;
int num = 3;
if (i < 4){
	num = num * num;
}else{
	num = num * num * num;
}

//*********** PAL
; R0: num
; R1: loop counter
; R2: test value
MOV 2, R1
MOV 3, R0
MOV 4, R2

BGT R2, R1, doif
COPY R0, R7
MUL R0, R0, R0
MUL R0, R7, R0
BR fin

doif:
MUL R0, R0, R0

fin:
END

//*********** HLL
int i = 2;
int num = 3;
if (i <= 4){
	num = num * num;
}else{
	num = num * num * num;
}

//*********** PAL
; R0: num
; R1: loop counter
; R2: test value
MOV 2, R1
MOV 3, R0
MOV 4, R2

BGT R1, R2, else
MUL R0, R0, R0
BR fin

else:
COPY R0, R7
MUL R0, R0, R0
MUL R0, R7, R0

fin:
END






