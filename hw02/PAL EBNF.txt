program ::= start body end
body ::= block | body block
block ::= codeSep code codeSep

line ::= ws comment endl | ws instr comment endl 
codesep ::= (endl)*
code ::= line | code line

instr ::= label | instrOp1 | instrCopy | instrMove | instrOp3 | instrTestBr | instrBr
comment ::= (";"(printChar)*)*

label ::= addr ":"
instrOp1 ::= OneOp regPart
instrCopy ::= COPY regPart "," regPart
instrMove ::= MOVE wsDef num "," regPart
instrOp3 ::= threeOp regPart "," regPart "," regPart
instrTestBr ::= testAndBranch regPart "," regPart "," wsDef addr
instrBr ::= branch wsDef addr

digit ::= [0-7]
letter ::= [a-ZA-Z]
printChar ::= [a-zA-Z0-9]
reg ::= R [0-7]
num ::= [1-7](digit)*
addr ::= letter | letter letter | letter letter letter | letter letter letter letter | letter letter letter letter letter
ws ::= (#x20)*
wsDef ::= (#x20)+
endl ::= ws #xA #xD | ws #xA

regPart ::= wsDef reg
oneOp ::= INC | DEC
threeOp ::= ADD | SUB | MUL | DIV
testAndBranch ::= BEQ | BGT
branch ::= BR
start ::= SRT endl
end ::= END | END endl

program ::= start body end
body ::= block | body block
block ::= codeSep code codeSep

line ::= ws comment endl | ws instr comment endl 
codesep ::= (endl)*
code ::= line | code line

instr ::= label | instrOp1 | instrCopy | instrMove | instrOp3 | instrTestBr | instrBr
comment ::= (";"(printChar)*)*

label ::= addr ":"
instrOp1 ::= OneOp regPart
instrCopy ::= COPY regPart "," regPart
instrMove ::= MOVE wsDef num "," regPart
instrOp3 ::= threeOp regPart "," regPart "," regPart
instrTestBr ::= testAndBranch regPart "," regPart "," wsDef addr
instrBr ::= branch wsDef addr

digit ::= [0-7]
letter ::= [a-ZA-Z]
printChar ::= [a-zA-Z0-9]
reg ::= R [0-7]
num ::= [1-7](digit)*
addr ::= letter | letter letter | letter letter letter | letter letter letter letter | letter letter letter letter letter
ws ::= (#x20)*
wsDef ::= (#x20)+
endl ::= ws #xA #xD | ws #xA

regPart ::= wsDef reg
oneOp ::= INC | DEC
threeOp ::= ADD | SUB | MUL | DIV
testAndBranch ::= BEQ | BGT
branch ::= BR
start ::= SRT endl
end ::= END | END endl
